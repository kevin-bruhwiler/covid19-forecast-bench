{"version":3,"sources":["evaluation/evalgraph.js","evaluation/evalmap.js","evaluation/evaluation.js","homepage/homepage.js","submit/submit.js","navbar/navbar.js","forecastbench.js","reportWebVitals.js","index.js"],"names":["lightColorScheme","darkColorScheme","addChart","methods","lines","scatters","legends","data","colorScheme","forEach","method","idx","color","length","lineStyle","stroke","strokeWidth","parent","border","scatterStyle","fill","labels","tooltipStyle","fontSize","fontFamily","fontWeight","lineData","filter","datapoint","y","push","name","symbol","style","interpolation","size","datum","x","substring","labelComponent","cornerRadius","flyoutStyle","flyoutHeight","dx","dy","evalgraph","props","mlMethods","humanMethods","allMethods","anchorDatapoints","maeData","containerComponent","theme","VictoryTheme","material","padding","top","bottom","left","right","height","tickCount","tickFormat","t","label","tickLabels","angle","axisLabel","dependentAxis","abbrStateMapping","AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","stateAbbrMapping","Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","Ohio","Oklahoma","Oregon","Pennsylvania","Tennessee","Texas","Utah","Vermont","Virginia","Washington","Wisconsin","Wyoming","evalmap","clickHandler","region","mapHandler","event","target","dataset","map","onClick","defaultFill","width","customizeFill","customize","Option","Select","US_STATES","ML_MODELS","Evaluation","componentWillMount","formRef","React","createRef","Papa","parse","state","timeSpan","download","worker","header","skipEmptyLines","complete","initialize","result","csvRow","index","col","setState","methodList","concat","updateData","addMethod","func","maeSummary","id","parseInt","mainGraphData","reloadAll","methodIsSelected","includes","doesMethodFitFilter","isMLMethod","allData","prevState","current","setFieldsValue","removeMethod","targetMethod","Object","keys","reduce","newMainGraphData","onValuesChange","changedValues","allValues","prevMethods","newMethods","methodsToAdd","methodsToRemove","handleErrorTypeSelect","e","errorType","value","handleTimeSpanSelect","handleRegionChange","newRegion","handleFilterChange","metrics","metricsList","forecastType","lastDate","this","methodOptions","sort","s","regionOptions","replace","className","type","justify","span","labelCol","wrapperCol","ref","Item","Group","defaultValue","onChange","Button","showSearch","placeholder","mode","m","Component","HomePage","class","src","to","href","Submit","NavBar","Navbar","collapseOnSelect","expand","Brand","alt","Toggle","aria-controls","Collapse","Nav","Link","ForecastBench","redirectHome","redirectSubmit","redirectEvaluation","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e09165.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  VictoryChart,\n  VictoryLine,\n  VictoryScatter,\n  VictoryTooltip,\n  VictoryLabel,\n  VictoryLegend,\n  VictoryAxis,\n  VictoryZoomContainer,\n  VictoryTheme,\n} from \"victory\";\n\nconst lightColorScheme = [\n  \"#ffeebb44\",\n  \"#adeecf44\",\n  \"#ffe9d644\",\n  \"#fbbedf44\",\n  \"#cbbcb144\",\n  \"#ffd5cd44\",\n  \"#bedbbb44\",\n  \"#9ba4b444\",\n  \"#51adcf44\",\n  \"#f8efd444\",\n  \"#ffcbcb44\",\n  \"#99f3bd44\",\n  \"#d6e0f044\",\n  \"#fbe2e544\",\n];\n\nconst darkColorScheme = [\n  \"#ef4f4f\",\n  \"#74c7b8\",\n  \"#ff7b54\",\n  \"#ffb26b\",\n  \"#ffd56b\",\n  \"#939b62\",\n  \"#ec4646\",\n  \"#663f3f\",\n  \"#51c2d5\",\n  \"#bee5d3\",\n  \"#d6b0b1\",\n  \"#d6b0b1\",\n  \"#8b5e83\",\n  \"#3b5360\",\n  \"#111d5e\",\n  \"#c70039\",\n  \"#ee9595\",\n  \"#f37121\",\n  \"#350b40\",\n  \"#af0069\",\n];\n\n// Add a method in the chart.\nconst addChart = (methods, lines, scatters, legends, data, colorScheme) => {\n  methods.forEach((method, idx) => {\n    if (data[method]) {\n      let color = colorScheme[idx % colorScheme.length];\n\n      const lineAnimation = {\n        duration: 2000,\n        onLoad: { duration: 1000 },\n      };\n\n      const flyoutStyle = { fill: \"white\", stroke: \"#ccc\", strokeWidth: 0.5 };\n\n      const lineStyle = {\n        data: { stroke: color, strokeWidth: 1 },\n        parent: { border: \"1px solid #ccc\" },\n      };\n\n      const scatterStyle = {\n        data: { fill: color },\n        labels: { fill: color },\n      };\n\n      const tooltipStyle = [\n        {\n          fill: color,\n          fontSize: 5,\n          fontFamily: \"sans-serif\",\n          fontWeight: \"bold\",\n        },\n        { fill: \"#aaa\", fontSize: 5, fontFamily: \"sans-serif\" },\n        { fill: \"#aaa\", fontSize: 5, fontFamily: \"sans-serif\" },\n      ];\n\n      const lineData = data[method][\"maeData\"].filter(datapoint => datapoint.y); // Filter out NaN values.\n      legends.push({ name: method, symbol: { fill: color } });\n\n      lines.push(\n        <VictoryLine\n          key={idx}\n          data={lineData}\n          // animate={lineAnimation}\n          style={lineStyle}\n          interpolation=\"linear\"\n        />\n      );\n      scatters.push(\n        <VictoryScatter\n          key={idx}\n          data={lineData}\n          style={scatterStyle}\n          size={1.5}\n          labels={({ datum }) => [\n            method,\n            `End date: ${datum.x.substring(11, 21)}`,\n            `MAE: ${datum.y}`,\n          ]}\n          labelComponent={\n            <VictoryTooltip\n              cornerRadius={0}\n              flyoutStyle={flyoutStyle}\n              flyoutHeight={20}\n              style={tooltipStyle}\n              dx={-36}\n              dy={20}\n            />\n          }\n        />\n      );\n    }\n  });\n};\n\nexport const evalgraph = props => {\n  const { data, mlMethods, humanMethods, allMethods, filter } = props;\n\n  let lines = [];\n  let scatters = [];\n  let legends = [];\n\n  // Add an invisible anchor line to the chart to prevent the chart from being cut off.\n  if (data[\"anchorDatapoints\"]) {\n    lines.push(\n      <VictoryLine\n        style={{\n          data: { stroke: \"#ffffff\" },\n        }}\n        data={data.anchorDatapoints.maeData}\n      />\n    );\n  }\n\n  // Cascade human methods on top of ml methods.\n  if (data) {\n    if (filter === \"human\") {\n      addChart(mlMethods, lines, scatters, legends, data, lightColorScheme);\n      addChart(humanMethods, lines, scatters, legends, data, darkColorScheme);\n\n      // Cascade ml methods on top of human methods.\n    } else if (filter === \"ml\") {\n      addChart(humanMethods, lines, scatters, legends, data, lightColorScheme);\n      addChart(mlMethods, lines, scatters, legends, data, darkColorScheme);\n\n      // If no filter specified, foreground all methods.\n    } else {\n      addChart(allMethods, lines, scatters, legends, data, darkColorScheme);\n    }\n  }\n\n  // An invisible anchor point to prevent the chart from being cut off.\n  scatters.push(\n    <VictoryScatter\n      style={{\n        data: { fill: \"#ffffff\" },\n      }}\n      size={0}\n      data={[{ x: \"x\", y: 200 }]}\n    />\n  );\n\n  return (\n    <div>\n      <VictoryChart\n        containerComponent={<VictoryZoomContainer />}\n        theme={VictoryTheme.material}\n        padding={{ top: 2, bottom: 40, left: 40, right: 60 }}\n        height={180}\n      >\n        {lines}\n        {scatters}\n        <VictoryAxis\n          tickCount={8}\n          tickFormat={t => (typeof t === \"string\" ? t.substring(11, 21) : t)}\n          label=\"Forecast End Date\"\n          style={{\n            tickLabels: { fontSize: 6, padding: 10, angle: 25 },\n            axisLabel: { fontSize: 6, padding: 2 },\n          }}\n        />\n        <VictoryAxis\n          dependentAxis\n          label=\"MAE\"\n          style={{\n            tickLabels: { fontSize: 6, padding: 1 },\n            axisLabel: { fontSize: 6, padding: 20 },\n          }}\n        />\n        <VictoryLegend\n          data={legends}\n          style={{ labels: { fontSize: 4 } }}\n          x={290}\n          y={0}\n        />\n      </VictoryChart>\n    </div>\n  );\n};\n\nexport default evalgraph;\n","import React, { Component } from \"react\";\nimport \"./evalmap.css\";\nimport USAMap from \"react-usa-map\";\n\nconst abbrStateMapping = {\n  AL: \"Alabama\", AK: \"Alaska\", AZ: \"Arizona\", AR: \"Arkansas\", CA: \"California\",\n  CO: \"Colorado\", CT: \"Connecticut\", DE: \"Delaware\", FL: \"Florida\", GA: \"Georgia\",\n  HI: \"Hawaii\", ID: \"Idaho\", IL: \"Illinois\", IN: \"Indiana\", IA: \"Iowa\",\n  KS: \"Kansas\", KY: \"Kentucky\", LA: \"Louisiana\", ME: \"Maine\", MD: \"Maryland\",\n  MA: \"Massachusetts\", MI: \"Michigan\", MN: \"Minnesota\", MS: \"Mississippi\", MO: \"Missouri\",\n  MT: \"Montana\", NE: \"Nebraska\", NV: \"Nevada\", NH: \"New Hampshire\", NJ: \"New Jersey\",\n  NM: \"New Mexico\", NY: \"New York\", NC: \"North Carolina\", ND: \"North Dakota\", OH: \"Ohio\",\n  OK: \"Oklahoma\", OR: \"Oregon\", PA: \"Pennsylvania\", RI: \"Rhode Island\", SC: \"South Carolina\",\n  SD: \"South Dakota\", TN: \"Tennessee\", TX: \"Texas\", UT: \"Utah\", VT: \"Vermont\",\n  VA: \"Virginia\", WA: \"Washington\", WV: \"West Virginia\", WI: \"Wisconsin\", WY: \"Wyoming\",\n};\n\nconst stateAbbrMapping = {\n  Alabama: \"AL\", Alaska: \"AK\", Arizona: \"AZ\", Arkansas: \"AR\", California: \"CA\",\n  Colorado: \"CO\", Connecticut: \"CT\", Delaware: \"DE\", Florida: \"FL\", Georgia: \"GA\",\n  Hawaii: \"HI\", Idaho: \"ID\", Illinois: \"IL\", Indiana: \"IN\", Iowa: \"IA\",\n  Kansas: \"KS\", Kentucky: \"KY\", Louisiana: \"LA\", Maine: \"ME\", Maryland: \"MD\",\n  Massachusetts: \"MA\", Michigan: \"MI\", Minnesota: \"MN\", Mississippi: \"MS\",\n  Missouri: \"MO\", Montana: \"MT\", Nebraska: \"NE\", Nevada: \"NV\", \"New Hampshire\": \"NH\",\n  \"New Jersey\": \"NJ\", \"New Mexico\": \"NM\", \"New York\": \"NY\", \"North Carolina\": \"NC\",\n  \"North Dakota\": \"ND\", Ohio: \"OH\", Oklahoma: \"OK\", Oregon: \"OR\", Pennsylvania: \"PA\",\n  \"Rhode Island\": \"RI\", \"South Carolina\": \"SC\", \"South Dakota\": \"SD\", Tennessee: \"TN\",\n  Texas: \"TX\", Utah: \"UT\", Vermont: \"VT\", Virginia: \"VA\", Washington: \"WA\",\n  \"West Virginia\": \"WV\", Wisconsin: \"WI\", Wyoming: \"WY\",\n};\n\nconst evalmap = props => {\n  const { clickHandler, region } = props;\n  const mapHandler = event => {\n    clickHandler(abbrStateMapping[event.target.dataset.name]);\n  };\n\n  let map = <USAMap onClick={mapHandler} defaultFill=\"#c05555\" width=\"30vw\" height=\"50vh\" />\n  if (region !== \"states\") {\n      const abbr = stateAbbrMapping[region];\n      const customizeFill = {};\n      customizeFill[abbr] = {fill: \"#c05555\"};\n      map = <USAMap onClick={mapHandler} customize={customizeFill} width=\"30vw\" height=\"50vh\" />\n  }\n\n  return (\n    <div>\n        {map}\n    </div>\n  );\n};\n\nexport default evalmap;\n","import React, { Component } from \"react\";\nimport Papa from \"papaparse\";\nimport { readRemoteFile } from \"react-papaparse\";\nimport Evalgraph from \"./evalgraph\";\nimport Evalmap from \"./evalmap\";\nimport \"./evaluation.css\";\nimport { Form, Select, Row, Col, Radio, List, Avatar } from \"antd\";\nimport FormItem from \"antd/lib/form/FormItem\";\n\nconst { Option } = Select;\n\nconst US_STATES = [\n  \"Washington\",\n  \"Illinois\",\n  \"California\",\n  \"Arizona\",\n  \"Massachusetts\",\n  \"Wisconsin\",\n  \"Texas\",\n  \"Nebraska\",\n  \"Utah\",\n  \"Oregon\",\n  \"Florida\",\n  \"New York\",\n  \"Rhode Island\",\n  \"Georgia\",\n  \"New Hampshire\",\n  \"North Carolina\",\n  \"New Jersey\",\n  \"Colorado\",\n  \"Maryland\",\n  \"Nevada\",\n  \"Tennessee\",\n  \"Hawai\",\n  \"Indiana\",\n  \"Kentucky\",\n  \"Minnesota\",\n  \"Oklahoma\",\n  \"Pennsylvania\",\n  \"South Carolina\",\n  \"District of Columbia\",\n  \"Kansas\",\n  \"Missouri\",\n  \"Vermont\",\n  \"Virginia\",\n  \"Connecticut\",\n  \"Iowa\",\n  \"Louisiana\",\n  \"Ohio\",\n  \"Michigan\",\n  \"South Dakota\",\n  \"Arkansas\",\n  \"Delaware\",\n  \"Mississippi\",\n  \"New Mexico\",\n  \"North Dakota\",\n  \"Wyoming\",\n  \"Alaska\",\n  \"Maine\",\n  \"Alabama\",\n  \"Idaho\",\n  \"Montana\",\n  \"Puerto Rico\",\n  \"Virgin Islands\",\n  \"Guam\",\n  \"West Virginia\",\n  \"Northern Mariana Islands\",\n  \"American Samoa\",\n];\n\n// TODO: Since we only have limited number of ML/AI methods, they are hardcoded here.\n// Later we got to fetch this file from a file/online source.\nconst ML_MODELS = [\n  \"UMich_RidgeTfReg\",\n  \"SIkJaun10_hyper7\",\n  \"ensemble_SIkJa_RF\",\n  \"SIkJaun1_window_noval\",\n  \"SIkJaun1_hyper7_smooth7\",\n  \"SIkJaun1_hyper7\",\n  \"SIkJaun10_window_noval\",\n  \"SIkJaun10_hyper7_smooth7\",\n];\n\nclass Evaluation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      region: \"states\",\n      filter: \"all\",\n      humanMethods: [],\n      mlMethods: [],\n      methodList: [],\n      allMethods: [],\n      maeSummary: [],\n      mainGraphData: {},\n      metrics: \"MAE\",\n      metricsList: [\"MAE\", \"Percentage\", \"RMSE\"],\n      forecastType: \"incDeath\",\n      timeSpan: \"4\",\n      lastDate: \"\",\n    };\n  }\n\n  componentWillMount = () => {\n    this.formRef = React.createRef();\n    Papa.parse(\n      `https://raw.githubusercontent.com/scc-usc/covid19-forecast-bench/master/evaluation/state_death_eval/summary_${this.state.timeSpan}_weeks_ahead_${this.state.region}.csv`,\n      {\n        download: true,\n        worker: true,\n        header: true,\n        skipEmptyLines: true,\n        complete: this.initialize,\n      }\n    );\n  };\n\n  initialize = result => {\n    result.data.map((csvRow, index) => {\n      for (const col in csvRow) {\n        if (col === \"\" && csvRow[col] !== \" \") {\n          this.setState(state => {\n            const methodList = state.methodList.concat(csvRow[col]);\n            return {\n              methodList,\n            };\n          });\n        }\n      }\n    });\n\n    this.updateData(result, () => {\n      this.addMethod(\"ensemble_SIkJa_RF\");\n      this.addMethod(\"reich_COVIDhub_ensemble\");\n    });\n  };\n\n  updateData = (result, func) => {\n    let anchorDatapoints = { maeData: [] };\n    const maeSummary = result.data.map((csvRow, index) => {\n      const method = { id: \"\", data: [] };\n      for (const col in csvRow) {\n        if (col === \"\") {\n          method.id = csvRow[col];\n        } else {\n          method.data.push({\n            x: col,\n            y: parseInt(csvRow[col]),\n          });\n        }\n      }\n\n      // If method id is an empty space, the data are empty anchor datapoints.\n      if (method.id == \" \") {\n        anchorDatapoints.maeData = method.data;\n      }\n      return method;\n    });\n\n    this.setState(\n      {\n        maeSummary: maeSummary,\n        mainGraphData: { anchorDatapoints },\n      },\n      () => {\n        this.reloadAll();\n        if (typeof func === \"function\" && func()) {\n          func();\n        }\n      }\n    );\n  };\n\n  methodIsSelected = method => {\n    if (this.state.allMethods && method) {\n      return this.state.allMethods.includes(method);\n    }\n    return false;\n  };\n\n  doesMethodFitFilter = (method, filter) => {\n    if (filter === \"ml\") {\n      return ML_MODELS.includes(method);\n    } else if (filter === \"human\") {\n      return !ML_MODELS.includes(method);\n    }\n    return true;\n  };\n\n  isMLMethod = method => {\n    return this.doesMethodFitFilter(method, \"ml\");\n  };\n\n  addMethod = method => {\n    const maeData = this.state.maeSummary.filter(data => data.id === method)[0]\n      .data;\n    const allData = { maeData: maeData };\n\n    this.setState(\n      prevState => {\n        return {\n          humanMethods: this.isMLMethod(method)\n            ? prevState.humanMethods\n            : [...prevState.humanMethods, method],\n          mlMethods: !this.isMLMethod(method)\n            ? prevState.mlMethods\n            : [...prevState.mlMethods, method],\n          allMethods: [...prevState.allMethods, method],\n          mainGraphData: {\n            ...prevState.mainGraphData,\n            [method]: allData,\n          },\n        };\n      },\n      () => {\n        this.formRef.current.setFieldsValue({\n          methods: this.state.allMethods,\n        });\n      }\n    );\n  };\n\n  removeMethod = targetMethod => {\n    if (targetMethod === \" \") {\n      return;\n    }\n    let humanMethods = this.state.humanMethods;\n    let mlMethods = this.state.mlMethods;\n    let allMethods = this.state.allMethods;\n\n    if (!this.isMLMethod(targetMethod)) {\n      humanMethods = humanMethods.filter(method => method !== targetMethod);\n    } else {\n      mlMethods = mlMethods.filter(method => method !== targetMethod);\n    }\n    allMethods = allMethods.filter(method => method != targetMethod);\n\n    this.setState(prevState => {\n      return {\n        humanMethods: humanMethods,\n        mlMethods: mlMethods,\n        allMethods: allMethods,\n        mainGraphData: Object.keys(prevState.mainGraphData)\n          .filter(method => method !== targetMethod)\n          .reduce((newMainGraphData, method) => {\n            return {\n              ...newMainGraphData,\n              [method]: prevState.mainGraphData[method],\n            };\n          }, {}),\n      };\n    });\n  };\n\n  onValuesChange = (changedValues, allValues) => {\n    const prevMethods = this.state.allMethods;\n    const newMethods = allValues.methods;\n    if (newMethods && prevMethods) {\n      const methodsToAdd = newMethods.filter(\n        method => !prevMethods.includes(method)\n      );\n      const methodsToRemove = prevMethods.filter(\n        method => !newMethods.includes(method)\n      );\n\n      methodsToAdd.forEach(this.addMethod);\n      methodsToRemove.forEach(this.removeMethod);\n    }\n  };\n\n  reloadAll = () => {\n    const prevMethods = this.state.allMethods;\n    this.setState(\n      {\n        humanMethods: [],\n        mlMethods: [],\n        allMethods: [],\n      },\n      () => {\n        prevMethods.forEach(this.addMethod);\n      }\n    );\n  };\n\n  handleErrorTypeSelect = e => {\n    this.setState({\n      errorType: e.target.value,\n    });\n  };\n\n  handleTimeSpanSelect = e => {\n    this.setState({\n      timeSpan: e.target.value,\n    });\n    Papa.parse(\n      `https://raw.githubusercontent.com/scc-usc/covid19-forecast-bench/master/evaluation/state_death_eval/summary_${e.target.value}_weeks_ahead_${this.state.region}.csv`,\n      {\n        download: true,\n        worker: true,\n        header: true,\n        skipEmptyLines: true,\n        complete: this.updateData,\n      }\n    );\n  };\n\n  handleRegionChange = newRegion => {\n    this.setState(\n      {\n        region: newRegion,\n      },\n      () => {\n        Papa.parse(\n          `https://raw.githubusercontent.com/scc-usc/covid19-forecast-bench/master/evaluation/state_death_eval/summary_${this.state.timeSpan}_weeks_ahead_${this.state.region}.csv`,\n          {\n            download: true,\n            header: true,\n            worker: true,\n            skipEmptyLines: true,\n            complete: this.updateData,\n          }\n        );\n\n        this.formRef.current.setFieldsValue({\n          region: this.state.region,\n        });\n      }\n    );\n  };\n\n  handleFilterChange = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  render() {\n    const {\n      filter,\n      humanMethods,\n      mlMethods,\n      allMethods,\n      methodList,\n      region,\n      metrics,\n      metricsList,\n      timeSpan,\n      mainGraphData,\n    } = this.state;\n\n    const methodOptions = methodList\n      .filter(method => !this.methodIsSelected(method))\n      .filter(method => this.doesMethodFitFilter(method, filter))\n      .sort()\n      .map(s => {\n        return <Option key={s}> {s} </Option>;\n      });\n\n    const formLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 18 },\n    };\n\n    const regionOptions = [];\n    regionOptions.push(\n      <Option value=\"states\" key=\"0\">\n        US Average\n      </Option>\n    );\n    US_STATES.forEach((state, index) => {\n      regionOptions.push(\n        <Option value={state.replace(\" \", \"%20\")} key={index + 1}>\n          {state}\n        </Option>\n      );\n    });\n\n    return (\n      <div className=\"leader-page-wrapper\">\n        <div className=\"evaluation-container\">\n          <div className=\"control-container\">\n            <Row type=\"flex\" justify=\"space-around\">\n              <Col span={12}>\n                <Form\n                  {...formLayout}\n                  ref={this.formRef}\n                  onValuesChange={this.onValuesChange}\n                >\n                  <Form.Item label=\"Filter\" name=\"filter\">\n                    <Radio.Group\n                      defaultValue=\"all\"\n                      onChange={this.handleFilterChange}\n                    >\n                      <Radio.Button value=\"all\">All Methods</Radio.Button>\n                      <Radio.Button value=\"ml\">ML/AI Methods</Radio.Button>\n                      <Radio.Button value=\"human\">\n                        Human Expert-Level Methods\n                      </Radio.Button>\n                    </Radio.Group>\n                  </Form.Item>\n                  <Form.Item label=\"Region\" name=\"region\">\n                    <Select\n                      showSearch\n                      placeholder=\"Select a region\"\n                      defaultValue=\"states\"\n                      value={region}\n                      onChange={this.handleRegionChange}\n                    >\n                      {regionOptions}\n                    </Select>\n                  </Form.Item>\n                  <Form.Item label=\"Methods\" name=\"methods\">\n                    <Select mode=\"multiple\" placeholder=\"Select Methods\">\n                      {methodOptions}\n                    </Select>\n                  </Form.Item>\n                  {/* TODO: The metrics options have not been implemented. */}\n                  <Form.Item label=\"Metrics\" name=\"metrics\">\n                    <Select showSearch defaultValue=\"MAE\">\n                      {metricsList.map((m, idx) => (\n                        <Option value={m} key={idx}>\n                          {m}\n                        </Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                  {/* TODO: The metrics options have not been implemented. */}\n                  <Form.Item label=\"Forecast Type\" name=\"forecastType\">\n                    <Select showSearch defaultValue=\"incDeath\">\n                      <Option value=\"incDeath\">\n                        COVID-19 death US state-level death forecasts\n                      </Option>\n                      <Option value=\"incCase\">\n                        COVID-19 death US state-level case forecasts\n                      </Option>\n                    </Select>\n                  </Form.Item>\n                  <Form.Item label=\"Prediction Time Span\" name=\"timeSpan\">\n                    <Radio.Group\n                      value={timeSpan}\n                      defaultValue={\"4\"}\n                      onChange={this.handleTimeSpanSelect}\n                    >\n                      <Radio value=\"1\">1-week-ahead</Radio>\n                      <Radio value=\"2\">2-week-ahead</Radio>\n                      <Radio value=\"3\">3-week-ahead</Radio>\n                      <Radio value=\"4\">4-week-ahead</Radio>\n                    </Radio.Group>\n                  </Form.Item>\n                </Form>\n              </Col>\n            </Row>\n          </div>\n          <Row>\n            <Col span={8}>\n              <div className=\"evalmap-container\">\n                <Evalmap\n                  clickHandler={this.handleRegionChange}\n                  region={region}\n                />\n              </div>\n            </Col>\n            <Col span={16}>\n              <div className=\"evalgraph-container\">\n                <Evalgraph\n                  className=\"graph\"\n                  data={mainGraphData}\n                  mlMethods={mlMethods}\n                  humanMethods={humanMethods}\n                  allMethods={allMethods}\n                  filter={filter}\n                />\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Evaluation;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\"; \nimport \"./homepage.css\";\nimport \"../forecastbench.css\";\nimport \"../w3.css\";\n\nclass HomePage extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t\n\t\t\t<div class=\"w3-content\">\n\n\t\t\t<div class=\"mySlides w3-display-container w3-center\">\n\n\t\t\t<div class =\"w3-opacity\">\n\t\t\t<img src=\"https://raw.githubusercontent.com/scc-usc/covid19-forecast-bench/master/frontend/images/example_plot.PNG\" height=\"300\" width=\"100%\"/>\n\t\t\t</div>\n\n\t\t\t<div class=\"w3-display-bottommiddle w3-container w3-padding-32\">\n\t\t\t<p class=\"w3-xxlarge w3-center w3-text-black\"><b>COVID-19 Forecasting Benchmark</b></p>\n\t\t\t<p class=\"w3-black w3-text-white w3-large\"><b>Pushing the limits of AI/ML in epidemic forecasting</b></p>   \n\t\t\t</div>\n\t\t\t\n\t\t\t</div>\n\n\t\t\t<br/>\n\t\t\t<div class = \"w3-sand w3-sans-serif w3-large\">\n\t\t\t<p class=\"w3-justify\">\n\t\t\tThe COVID-19 Forecasting Benchmark aims to provide an evaluation platform to AI/ML researchers interested in epidemic forecasting.\n\t\t\tSubmit your own forecasts and find out where you stand compared to other AI/ML based forecasts and expert COVID-19 forecasts.\n\t\t\t</p>\n\t\t\t\n\t\t\t<div class = \"w3-center\">\n\t\t\t\n\t\t\t<Link to=\"/evaluation\" className=\"w3-btn w3-blue\">Check Evaluations</Link>{'\t'}\n\t\t\t<Link to=\"/submit\" className=\"w3-btn w3-blue\">Start a Submission</Link>\n\n\t\t\t</div>\n\n\t\t\t\n\n\t\t\t<br/><br/>\n\t\t\t<p class=\"w3-justify\">\n\t\t\tWith the help of the AI/ML community, we wish to find the answers the following questions.\n\t\t\t</p>\n\t\t\t<ul >\n\t\t\t<li> Which epidemic forecasting methods perform the best? </li>\n\t\t\t<li> Can AI/ML based epidemic forecasting methods wihtout human intervention outperform human tuned methods? </li>\n\t\t\t<li> What methodology decisions work best and when? </li>\n\t\t\t<li> What are the appropriate ways of evaluating epidemic forecasts? </li>\n\t\t\t</ul>\n\t\t\t\n\t\t\t<br/>\n\t\t\t<p>\n\t\t\tFor details, please read our <a href=\"https://drive.google.com/file/d/1ljd03CvjXAJkBHD5r1RKZcwCFeeLJ_me/view?usp=sharing\" target=\"_blank\"> paper </a> accepted at The 5th International Workshop on Health Intelligence in conjunction with The Thirty-Fifth AAAI Conference on Artificial Intelligence (AAAI-21).\n\t\t\t</p>\n\n\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\texport default HomePage;","import React, { Component } from \"react\";\nimport \"./submit.css\";\nimport \"../forecastbench.css\";\nimport \"../w3.css\";\n\n\nclass Submit extends Component {\n    render() {\n        return (\n\n            <div class=\"w3-content\">\n            \n                <div class = \"w3-sand w3-sans-serif w3-large\">\n                \n                    <h1>Submitting your Forecasts</h1>\n\n                    <p>\n                    We invite the interested teams to submit forecasts generated by their methodology by issuing a pull request.\n                    </p>\n\n                    <ul class=\"w3-ul\">\n                    <li> <b> Data to use</b>: While generating retrospective forecasts, please ensure that you are only using data that was available before then. \n                    Our Github repo provides the <a href=\"https://github.com/scc-usc/covid19-forecast-bench/tree/master/historical-data\" target=\"_blank\"> version of case and death data available on previous days </a>. \n                    The method should treat them as \"separate datasets\" without any knowledge of the date of the data, i.e., the method should be consistent irrespective of the date.\n\n                    <div class =\"w3-center\">\n                        <img src=\"https://raw.githubusercontent.com/scc-usc/covid19-forecast-bench/master/frontend/images/forecast-generation.png\" height=\"300\"/>\n                    </div>\n                    You may use the historical versions of the JHU data available at <a href=\" https://github.com/scc-usc/ReCOVER-COVID-19/blob/master/results/historical_forecasts\" target=\"_blank\"> our other repo in time-series format</a>.\n                    Other data sources may be used as long as you can guarantee that no \"foresight\" was used.\n                    </li>\n                    <li> <b> Submission format </b>:The format of the file should be exactly like the <a href=\"https://github.com/reichlab/covid19-forecast-hub/blob/master/data-processed/README.md#forecast-file-format\" target=\"_blank\"> submissions for Reich Lab's forecast hub</a>. Please follow the naming convention: [Date of forecast (YYYY-MM-DD)]-[Method_Name].csv. </li>\n                    <li> <b> Forecast dates </b>: We will take the retrospective forecasts for any range of time, starting in July until the present. </li>\n                    <li> <b> Forecast locations </b>: Currently, we are only accepting case and death forecasts for US state, county, and national-level and national-level for other countries. More locations will be addressed in the future. </li>\n                    <li> <b> Forecast horizon</b>: The forecasts are expected to be incident cases forecasts per week observed on a Sunday for 1, 2, 3, and 4-week ahead. One week ahead forecast geenrated after a Monday is to be treated as the Sunday after the next one. This is in accordance with the Reich Lab's forecasting hub. </li>\n                    <li> <b> Where to upload files </b>: Please add your files in the folder \"raw-forecasts/\" in your forked repo and submit a pull request. It can be done directly using your browser, cloning the repo is not needed:\n\n                    <div class =\"w3-center\">\n                        <img src=\"https://raw.githubusercontent.com/scc-usc/covid19-forecast-bench/master/frontend/images/pull-request.PNG\" width=\"100%\"/>\n                    </div>\n                    </li>                    \n                    <li> <b> Methodology Description</b>: In a file named metadata-[Method Name].csv, please provide a short description of your approach, mentioning at least the following:\n                    <ul>\n                        <li> Modeling technique: Generative (SIR, SEIR, ...), Discriminative (Neural Networks, ARIMA, ...), ... </li>\n                        <li> Learning approach: Bayesian, Regression (Quadratic Programming, Gradient Descent, ...), ... </li>\n                        <li> Pre-processing: Smoothing (1 week, 2, week, auto), anomaly detection, ... </li>\n                    </ul>\n                    </li>\n                    <li> <b>Submitting forecasts from multiple methodologies</b>: If you are submitting forecasts for multiple methodolgies, please ensure there is something in their metadata descriptions that differentiates them. Please note that any change in your approach, including data pre-processing and hand-tuning a parameter counts as a different methodology.\n                    You can alter your method name to mark the distinction such as by appending an appropriate suffix. </li>\n                    <li> <b>License</b>: We encourage you to make your submission under <a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\"> the opensource MIT license</a>. </li>\n                    </ul>\n                    <br/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Submit;","import React, { Component } from \"react\";\n\nimport {\n    Menu,\n    Row,\n    Col\n} from 'antd';\nimport styles from \"./navbar.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\n\n\n// class NavBar extends Component {\nconst NavBar = () => {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-header navbar-light\">\n          <Navbar.Brand href=\"#/\"><img\n                    className=\"logo\"\n                    src=\"https://identity.usc.edu/files/2011/12/combo_gold_white_cardinal.png\"\n                    alt=\"USC\"\n                /></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link className=\"navbar-link\" href=\"#/\">Home</Nav.Link>\n              <Nav.Link className=\"navbar-link\" href=\"#evaluation\">Evaluation</Nav.Link>\n              <Nav.Link className=\"navbar-link\" href=\"#submit\">Submit</Nav.Link>\n              <Nav.Link className=\"navbar-link-highlight\" href=\"https://github.com/scc-usc/covid19-forecast-bench\" target=\"_blank\">Github</Nav.Link>\n            </Nav>\n            <Nav>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n    )\n}\nexport default NavBar;","import React, { Component } from \"react\";\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./forecastbench.css\";\nimport {HashRouter, Route, Redirect, Switch} from 'react-router-dom'; \nimport Evaluation from \"./evaluation/evaluation\";\nimport HomePage from \"./homepage/homepage\";\nimport Submit from \"./submit/submit\";\nimport Navbar from \"./navbar/navbar\";\n\nclass ForecastBench extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      redirectHome: false,\n      redirectSubmit: false,\n      redirectEvaluation: false,\n    }\n  }\n\n  redirectHome = ()=>{\n    this.setState({\n      redirectHome: true,\n      redirectSubmit: false,\n      redirectEvaluation: false,\n    });\n  }\n\n  redirectSubmit = ()=>{\n    this.setState({\n      redirectHome: false,\n      redirectSubmit: true,\n      redirectEvaluation: false,\n    });\n  }\n\n  redirectEvaluation = ()=>{\n    this.setState({\n      redirectHome: false,\n      redirectSubmit: false,\n      redirectEvaluation: true,\n    });\n  }\n\n  render() {\n    const {redirectHome, redirectSubmit, redirectEvaluation} = this.state;\n    return (\n      <HashRouter basename=\"/\">\n        {redirectHome?<Redirect to=\"/\"/>:null}\n        {redirectSubmit?<Redirect to=\"/about\"/>:null}\n        {redirectEvaluation?<Redirect to=\"/evaluation\"/>:null}\n        <Navbar redirectHome = {this.redirectHome}\n                redirectSubmit = {this.redirectSubmit}\n                redirectEvaluation = {this.redirectEvaluation}\n        />\n        <Switch>\n          <Route exact path='/'\n            render={(props) => <HomePage {...props} />}/>\n          <Route exact path='/submit'\n            render={(props) => <Submit {...props} />} />\n          <Route exact path='/evaluation'\n            render={(props) => <Evaluation {...props} />}/>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default ForecastBench;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ForecastBench from './forecastbench';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ForecastBench />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}